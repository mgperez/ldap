# ========================================
# == LDAP Connection Pooling Properties ==
# ========================================


## Número de conexiones reales

# Número mínimo de conexiones inactivas que queremos que haya. Si el número de conexiones baja de este número, se abriran más.
# El mínimo de conexiones que debe haber disponibles en el pool en todo momento.
#ldap.pool.minIdle=3

# El número máximo de conexiones en espera de cada tipo (read, read-write) que pueden permanecer inactivas en el pool.  Por defecto -> 8
# Número máximo de conexiones inactivas que queremos que haya. Si hay más, se irán cerrando.
# El límite de conexiones que debe haber disponibles en el pool.
ldap.pool.maxIdle=50


# Max size
# The maximum number of active connections of each type (read-only|read-write) that can be allocated from this pool at the same time. Default -> 8
# Número máximo de conexiones que se pueden abrir simultáneamente.
# El límite de conexiones que puede haber activas (es decir fuera del pool).
ldap.pool.maxActive=50

# Número de conexiones que se quiere que se abran en cuanto el pool comienza a trabajar
# (se llama por primera vez a getConnection(), setLogwriter(), setLoginTimeout(), getLoginTimeout() o getLogWriter().
# Debe llamarse a setInitialSize() antes de llamar a cualquiera de estos métodos y después no puede cambiarse el valor.
# El número de conexiones que se deben crear cuando se inicializa el pool.
#initialSize

# The overall maximum number of active connections (for all types) that can be allocated from this pool at the same time
# maxTotal

# Max time in ms to wait for connection to
# become available under pool exhausted condition
# El límite de tiempo, en milisegundos, que el pool debe esperar para que regrese una conexión al pool.
# Este parámetro se utiliza cuando un objeto pide una conexión, ya no hay conexiones disponibles,
# pero se ha alcanzado el límite de conexiones activas (por lo tanto ya no se deben crear más).
# En este caso el pool esperará el tiempo establecido en este parámetro a que regrese una conexión y si ninguna se libera al transcurrir este lapso, se arroja una excepción.
ldap.pool.maxWait=5000

# -- Evictor Settings --

# Ahora tenemos que hacer que la conexiones inactivas se cierren antes de que el firewall las
# cierre por timeout.
# Tenemos que ajustar los parámetros:
# eviction-run-interval-millis tiempo de revisión para cerrar conexión. Debe ser inferior al timeout # del firewall

# specifies the minimum amount of time that
# an object may sit idle in the pool before it is eligible for eviction
# due to idle time. When non-positive, no object will be dropped from
# the pool due to idle time alone. This setting has no effect unless
# timeBetweenEvictionRunsMillis > 0. The default setting for this
# parameter is 30 minutes.
# min-evictable-time-millis: debería estar en consonancia con el valor anterior.


# Period in ms at which evictor process runs. Default:  -1
# 5 minutos
ldap.pool.evictionPeriod=300000

# Max time in ms at which connections can remain idle
# before they become avaliable to eviction. (MinEvictableIdleTimeMillis) default:1800000
# idle timeout
# 10 minutos
ldap.pool.idleTime=600000


## Verificación automática de la conexión
# -- Connection Testing Settings --

# Set to true to enable connection liveliness testing on evictor process runs.
# Probably results in best performance
#  Indica si se debe testear la conexión mientras está inactiva. El tiempo entre tests se puede fijar con setTimeBetweenEvictionRunsMillis()
ldap.pool.testWhileIdle=true

# Set to true to enable connection liveliness testing before every request
# to borrow an object from the pool.
# Indica si se debe testear la conexión antes de pasársela a alguien.
ldap.pool.testOnBorrow=true

#Indica si se debe testear la conexión cuando ese alguien la libera.
#TestOnReturn


## LDAP configuration properties

# 5 seconds is an eternity to users
# Specifies the read timeout in milliseconds for LDAP operations.
# no read timeout is specified, which is equivalent to waiting for the response infinitely until it is received.
# The read timeout applies to the LDAP response from the server after the initial connection is established with the server.
ldap.read.timeout=5000

# timeout for connecting to the server.
ldap.connect.timeout=5000


#ldap.truststorePassword=changeit
#ldap.truststoreType=JCEKS
#ldap.truststore=/usr/local/pr/arqweb/cacerts
